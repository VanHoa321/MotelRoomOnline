@using MotelRoomOnline.Utilities
@model MotelRoomOnline.Models.Contract
@{
    ViewData["Title"] = "Chi tiết hợp đồng";
    Room room = ViewBag.Room;
    Customer customer = ViewBag.Customer;
    List<ContractFile> contractfiles = ViewBag.ContractFile;
}

<div class="content-wrapper">
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h4>Chi tiết hợp đồng thuê trọ</h4>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item">Quản lý thuê trọ</li>
                        <li class="breadcrumb-item active">Chi tiết hợp đồng</li>
                    </ol>
                </div>
            </div>
            @if (!string.IsNullOrEmpty(Functions.message))
            {
                <div class="alert alert-info alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <i class="icon fas fa-exclamation-triangle"></i>@Functions.message
                </div>
            }
        </div>
    </section>

    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="card card-primary">
                        <div class="card-body">
                            <input type="text" class="form-control mb-3" asp-for="ContractId" type="hidden">
                            
                            <h4 class="text-info">Thông tin phòng trọ</h4>
                            <table class="table table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th style="width:150px">Hình ảnh</th>
                                        <th style="width:400px">Tên trọ</th>
                                        <th style="width:300px">Địa chỉ</th>
                                        <th style="width:100px">Diện tích</th>
                                        <th style="width:100px">Ở tối đa</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td><img src="@room.Image" style="width:80px; height:80px" /></td>
                                        <td>@room.RoomName</td>
                                        <td>@room.Address</td>
                                        <td>@room.Acreage m<sup>2</sup></td>
                                        <td>@room.MaxPeople người</td>
                                    </tr>
                                </tbody>
                            </table>
                            <h4 class="text-info mt-4">Thông tin khách hàng</h4>
                            <table class="table table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th style="width:150px">Hình ảnh</th>
                                        <th style="width:400px">Họ tên</th>
                                        <th style="width:300px">CCCD</th>
                                        <th style="width:100px">Ngày sinh</th>
                                        <th style="width:100px">SĐT</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td><img src="@customer.Avatar" style="width:80px; height:80px" /></td>
                                        <td>@customer.FullName</td>
                                        <td>@customer.Code</td>
                                        <td>@customer.DOB.Value.ToString("dd/MM/yyyy")</td>
                                        <td>@customer.Phone</td>
                                    </tr>
                                </tbody>
                            </table>
                            <h4 class="text-info mt-4">Thông tin hợp đồng</h4>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex; margin-top:20px">
                                        <div id="drop_zone" style="border: 2px dashed #007bff; padding: 40px; width: 100%; text-align: center; cursor: pointer;">
                                            <span style="color:#007bff">Tải lên tài liệu quản lý hợp đồng</span>
                                            <div id="file_list"></div>
                                        </div>
                                        <input type="file" class="form-control" id="file_input" style="display:none;" multiple accept="image/*" />
                                    </div>
                                    <button type="submit" id="createContract" class="btn btn-info mb-3"><i class="fa-solid fa-floppy-disk" title="Tạo hợp đồng thuê trọ"></i></button>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Ngày tạo</label>
                                        <input type="text" class="form-control" value="@Model.CreatedDate.ToString("dd/MM/yyyy")" readonly>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Ngày kết thúc</label>
                                        @if (Model.EndDate != null)
                                        {
                                            <input type="text" class="form-control" value="@Model.EndDate.Value.ToString("dd/MM/yyyy")" readonly>
                                        }
                                        else
                                        {
                                            <input type="text" class="form-control" value="Chưa cập nhật" readonly>
                                        }
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Giá thuê</label>
                                        <input type="text" class="form-control" value="@Functions.ToVnd(Model.PriceRoom) đ/Tháng" readonly>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Tiền cọc</label>
                                        <input type="text" class="form-control" value="@Functions.ToVnd(Model.DepositAmount) đ" readonly>
                                    </div>
                                </div>                               
                            </div>
                            <div class="form-group">
                                <a class="btn btn-success addRental">
                                    <i class="fa-solid fa-plus" title="Thêm tháng thuê"></i>
                                </a>
                                <a class="btn btn-primary checkOutContract">
                                    <i class="fa-solid fa-money-check" title="Trả phòng"></i>
                                </a>
                            </div>
                            @await Component.InvokeAsync("RentalMonth")
                        </div>
                        <div class="card-footer">
                            <a asp-controller="Contract" asp-action="Index" class="btn btn-warning"><i class="fa-solid fa-rotate-left" style="color:white" title="Quay lại"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<script src="~/admin/assets/plugins/jquery/jquery.min.js"></script>

<script>
    const uploadedFiles = [];
    const maxFiles = 5;
    const dropZone = document.getElementById('drop_zone');
    const fileInput = document.getElementById('file_input');
    const fileList = document.getElementById('file_list');

    document.addEventListener('DOMContentLoaded', () => {
        const existingFiles = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(contractfiles ?? new List<ContractFile>()));
        if (existingFiles && existingFiles.length > 0) {
            existingFiles.forEach(file => {
                const fileObj = {
                    id: file.Id,
                    name: file.FileName,
                    url: file.FilePath,
                    type: file.FileType,
                };

                uploadedFiles.push(fileObj);
                const fileDiv = document.createElement('div');
                fileDiv.className = 'file-item';
                fileDiv.style.position = 'relative';
                fileDiv.style.display = 'inline-block';
                fileDiv.style.margin = '5px';

                const img = document.createElement('img');
                img.src = fileObj.url;
                img.alt = fileObj.name;
                img.style.width = '100px';
                img.style.height = '100px';
                img.style.objectFit = 'cover';

                img.onclick = () => {
                    window.open(img.src, '_blank');
                };

                const removeButton = document.createElement('button');
                removeButton.style.position = 'absolute';
                removeButton.style.top = '5px';
                removeButton.style.right = '5px';
                removeButton.style.backgroundColor = 'red';
                removeButton.style.color = 'white';
                removeButton.style.border = 'none';
                removeButton.style.cursor = 'pointer';

                const icon = document.createElement('i');
                icon.className = 'fas fa-trash';
                icon.style.fontSize = '16px';
                removeButton.appendChild(icon);

                removeButton.onclick = (e) => {
                    e.stopPropagation();
                    removeFile(fileObj.id, fileDiv);
                };

                fileDiv.appendChild(img);
                fileDiv.appendChild(removeButton);
                fileList.appendChild(fileDiv);
            });
        }
    });

    dropZone.addEventListener('click', () => {
        if (uploadedFiles.length < maxFiles) {
            fileInput.click();
        }
    });

    dropZone.addEventListener('dragover', (event) => {
        event.preventDefault();
    });

    dropZone.addEventListener('drop', (event) => {
        event.preventDefault();
        handleFiles(event.dataTransfer.files);
    });

    fileInput.addEventListener('change', (event) => {
        handleFiles(event.target.files);
    });

    function handleFiles(files) {
        for (let i = 0; i < files.length; i++) {
            if (uploadedFiles.length >= maxFiles) {
                toastr.error(`Bạn chỉ được tải tối đa ${maxFiles} ảnh.`);
                break;
            }

            const file = files[i];
            uploadedFiles.push(file);

            const fileDiv = document.createElement('div');
            fileDiv.className = 'file-item';
            fileDiv.style.position = 'relative';
            fileDiv.style.display = 'inline-block';
            fileDiv.style.margin = '5px';
            fileDiv.dataset.index = uploadedFiles.length - 1;
            fileDiv.file = file;

            const img = document.createElement('img');
            img.src = URL.createObjectURL(file);
            img.alt = file.name;
            img.style.width = '100px';
            img.style.height = '100px';
            img.style.objectFit = 'cover';

            img.onclick = () => {
                window.open(img.src, '_blank');
            };

            const removeButton = document.createElement('button');
            removeButton.style.position = 'absolute';
            removeButton.style.top = '5px';
            removeButton.style.right = '5px';
            removeButton.style.backgroundColor = 'red';
            removeButton.style.color = 'white';
            removeButton.style.border = 'none';
            removeButton.style.cursor = 'pointer';

            const icon = document.createElement('i');
            icon.className = 'fas fa-trash';
            icon.style.fontSize = '16px';
            removeButton.appendChild(icon);

            removeButton.onclick = (e) => {
                e.stopPropagation();
                removeFile(0, fileDiv);
            };

            fileDiv.appendChild(img);
            fileDiv.appendChild(removeButton);
            fileList.appendChild(fileDiv);
        }

        if (uploadedFiles.length >= maxFiles) {
            dropZone.style.cursor = 'not-allowed';
        }
    }

    function removeFile(fileId, fileDiv) {
        if (fileId > 0) {
            // Nếu file có ID (đã lưu trong DB), yêu cầu xác nhận xóa
            Swal.fire({
                title: "Xác nhận xóa file?",
                text: "Bạn có chắc chắn muốn xóa file này không?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Xóa",
                cancelButtonText: "Hủy"
            }).then((result) => {
                if (result.isConfirmed) {
                    const index = uploadedFiles.findIndex(file => file.id === fileId);
                    if (index !== -1) {
                        const fileToDelete = uploadedFiles[index];
                        uploadedFiles.splice(index, 1);
                        $.ajax({
                            url: '/Landlord/Contract/DeleteFile',
                            type: 'POST',
                            data: { id: fileId },
                            success: function (response) {
                                console.log('File deleted successfully:', fileToDelete.name);
                                toastr.success('Xóa file thành công!');
                                fileDiv.remove();
                                if (uploadedFiles.length < maxFiles) {
                                    dropZone.style.cursor = 'pointer';
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error('Error deleting file:', error);
                                toastr.error('Có lỗi xảy ra khi xóa ảnh!');
                            }
                        });
                    }
                }
            });
        } else {
            // Nếu file không có ID, xóa trực tiếp
            const index = uploadedFiles.indexOf(fileDiv.file);
            if (index !== -1) {
                uploadedFiles.splice(index, 1);
                fileDiv.remove();
                toastr.success('File đã được xóa!');
                if (uploadedFiles.length < maxFiles) {
                    dropZone.style.cursor = 'pointer';
                }
            }
        }
    }

    document.getElementById('createContract').addEventListener('click', function () {
        if (uploadedFiles.length === 0) {
            toastr.error('Vui lòng tải lên ảnh minh chứng hợp đồng!');
            return;
        }

        const formData = new FormData();

        uploadedFiles.forEach((file) => {
            formData.append('files', file);
        });

        fetch('/Landlord/Contract/UploadFile', {
            method: 'POST',
            body: formData,
        })
            .then(response => {
                if (response.ok) {
                    return response.json();
                }
                throw new Error('Không có dữ liệu trả về!');
            })
            .then(data => {
                console.log('Success:', data);
                toastr.success('Tải lên thành công!');
            })
            .catch(error => {
                console.error('Error:', error);
                toastr.error('Có lỗi xảy ra khi tải lên!');
            });
    });
</script>

@section Scripts{
    <script src="~/admin/assets/plugins/jquery-validation/jquery.validate.min.js"></script>
    <script src="~/admin/assets/plugins/jquery-validation/additional-methods.min.js"></script>
    <script src="~/admin/assets/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/admin/assets/plugins/bootstrap4-duallistbox/jquery.bootstrap-duallistbox.min.js"></script>

    <script>
        $(document).ready(function () {
            $('body').on('click', '.addRental', function () {
                Swal.fire({
                    title: "Xác nhận thêm tháng thuê?",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Xác nhận",
                    cancelButtonText: "Hủy"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "/Landlord/Contract/AddRentalMonth",
                            type: "POST",
                            success: function (rs) {
                                if (rs.success) {
                                    window.location = "/Landlord/Contract/Detail/@(Functions.ContractId)"
                                }
                                else {
                                    toastr.error('Thêm tháng thuê không thành công');
                                }
                            }
                        });
                    }
                });
            })

            $('body').on('click', '.checkOutContract', function () {
                Swal.fire({
                    title: "Xác nhận trả phòng thuê?",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Xác nhận",
                    cancelButtonText: "Hủy"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "/Landlord/Contract/CheckOut",
                            type: "POST",
                            success: function (rs) {
                                if (rs.success) {
                                    toastr.success(rs.message);
                                    setTimeout(function () {
                                        window.location = "/Landlord/Contract/ContractView/@(Functions.ContractId)";
                                    }, 2000);
                                } else {
                                    toastr.error(rs.message);
                                }
                            },
                            error: function () {
                                toastr.error("Đã xảy ra lỗi trong quá trình xử lý. Vui lòng thử lại sau");
                            }
                        });
                    }
                });
            });
        })
    </script>
}
